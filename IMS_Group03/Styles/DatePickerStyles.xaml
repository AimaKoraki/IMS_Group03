<!-- Styles/DatePickerStyles.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="_Colors.xaml"/>
        <ResourceDictionary Source="_Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DatePickerDarkStyle" TargetType="DatePicker">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <!-- Use TextBox background for consistency -->
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="7,5"/>
        <!-- Keep original padding or adjust to match TextBox -->
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource BaseFontFamily}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- This new style replaces the old one inside your DatePickerDarkStyle -->
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="Calendar">
                    <!-- Set the main background for the calendar popup -->
                    <Setter Property="Background" Value="{StaticResource CalendarBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>

                    <!-- Define a new template for the entire calendar control -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Calendar">
                                <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                    <!-- This is the header with the month and year -->
                                    <CalendarItem x:Name="PART_CalendarItem"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{StaticResource BorderBrush}"
                                          BorderThickness="1"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <!-- Style for the individual day buttons (e.g., 1, 2, 3...) -->
                    <Setter Property="CalendarDayButtonStyle">
                        <Setter.Value>
                            <Style TargetType="CalendarDayButton">
                                <Setter Property="MinWidth" Value="30"/>
                                <Setter Property="MinHeight" Value="30"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CalendarDayButton">
                                            <Grid>
                                                <Ellipse x:Name="HighlightBackground" Fill="{TemplateBinding Background}" Opacity="0.2"/>
                                                <Ellipse x:Name="SelectedBackground" Fill="{StaticResource CalendarSelectedDayBrush}" Opacity="0" />
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="HighlightBackground" Property="Fill" Value="{StaticResource CalendarHoverDayBrush}"/>
                                                    <Setter TargetName="HighlightBackground" Property="Opacity" Value="1"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="SelectedBackground" Property="Opacity" Value="1"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                                <!-- Gray out days not in the current month -->
                                                <Trigger Property="IsInactive" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource CalendarInactiveDayBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>

                    <!-- Style for the Month/Year buttons -->
                    <Setter Property="CalendarButtonStyle">
                        <Setter.Value>
                            <Style TargetType="CalendarButton">
                                <Setter Property="MinWidth" Value="40"/>
                                <Setter Property="MinHeight" Value="22"/>
                                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="CalendarButton">
                                            <Grid>
                                                <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="0.2" RadiusX="3" RadiusY="3"/>
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Background" Property="Fill" Value="{StaticResource CalendarHoverDayBrush}"/>
                                                    <Setter TargetName="Background" Property="Opacity" Value="1"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Accent1Brush}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>